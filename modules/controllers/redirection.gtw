~~LANG:FR@frman:modules/controleurs/redirections~~

There are two types of redirection objects available:
  * @@C@jResponseRedirect@@: redirects to an action of the application with optional parameters
  * @@C@jResponseRedirectUrl@@: redirects to any URL, in particularly external url.


===== jResponseRedirect =====

To specify a redirection to an action, you indicate 'redirect' as the type of response:

<code php>
$resp = $this->getResponse('redirect');
</code>

You have then an instance of @@C@jResponseRedirect@@ in @@V@$resp@@.

You have three properties on this object:
   * @@P@action@@ to indicate the action to redirect (an action selector)
   * @@P@params@@ to indicate parameters for this actions (optional)
   * @@P@anchor@@ to indicate an anchor in the url #anchor (optional)

Example:
<code php>
$resp->action = "mymodule~mycontroller:mymethod";
$resp->params = array('foo' => 'bar');
$resp->anchor = 'yo';
</code>

And then

<code php>
return $resp;
</code>

There is shortcut method on controllers: `redirect($action, $parameters, $anchor)`.

```php

return $this->redirect("monmodule~moncontroleur:mamethode", array('foo' => 'bar'), 'yo');

```

===== jResponseRedirectUrl =====

This type of response ("redirectUrl") is used to redirect to an external url (or
an url which is not pointing to your application).

<code php>
$resp = $this->getResponse('redirectUrl');
</code>

The single property of this response is @@P@url@@, where you indicate the url to redirect.

<code php>
$resp->url = "https://jelix.org";
return $resp;
</code>

There is shortcut method on controllers: `redirectUrl($url)`

```php

return $this->redirectUrl("https://jelix.org");

```


===== Temporary or permanent redirection =====

By default, redirections are temporary redirection (http status code: 303). If
you want to indicate a permanent redirection, you have to set the property
@@P@$temporary@@ to false.

<code php>
$resp->temporary = false;
</code>

Or for methods `redirectUrl()` and `redirect()`, add an extra parameter `false`.
