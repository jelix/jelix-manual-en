~~LANG:FR@frman:classes-utiles/jmessage~~

Often, you'll find useful to display some results/consequences/hints of an
action in a subsequent action. As an example, when you redirect a user to your
home page after a login failure, it would be interesting to display him a
message that the login has failed and the reasons why.

In such cases, @@C@jMessage@@ is your best help. In short, jMessage stores
messages in session and expose methods to add, get and clear them.

===== Session variable =====

jMessage session variable has a default name : JELIX_MESSAGE. 
You can change it through @@P@jMessage::session_name@@ static member. 

Example : 

<code php>
   jMessage::session_name = 'MYAPP_MESSAGE';
</code>
   

===== Adding a message =====

Use @@M@jMessage::add@@ static method to store a message for further display.
Give your message as first argument. it also accepts an optional type.

Example :
<code php>
   // if login has failed
   jMessage::add( 'login failed : incorrect password'); // adds a message of 'default' type

   // redirect to home 
</code>


===== Display a message =====

Use the @@jmessage@@ template plugin to display pending messages.

Example:
<code>
    // in your home tpl

    // display pending messages of 'default' type within an <ul> tag 
    {jmessage} 
</code>

Code above will result in the html fragment below:

<code html>
  <ul class="jelix-msg">
   <li class="jelix-msg-item-default">login failed : incorrect password</li>
  </ul>
</code>

Note that Jelix provides default styles for type of messages @@error@@, @@warning@@,
@@notice@@ and @@ok@@ in the module @@master_admin@@.

Alternatively you can use the @@M@jMessage::get()@@ static method to retrieve a
message in a controller.

Example:

<code php>
   // in your 'home' action
   $message = jMessage::get(); // retrieves messages of type 'default'

   // assign to your template
   $tpl->assign('message', $message);
</code>

Note: if your message had not been stored with the default type, you should have
called @@M@jMessage::get('mytype')@@ to retrieve it.

You can also retrieve every messages with @@M@jMessage::getAll()@@.

===== Clearing messages =====

To clear pending messages and thus ensures that your sessions does not get
filled piles of messages, call @@M@jMessage::clearAll()@@.

To clear a specific type of messages, use @@M@jMessage::clear()@@. It accepts
an optional type argument. If empty, it clears messages of @@default@@ type.

