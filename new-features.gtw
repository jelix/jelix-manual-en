~~LANG:FR@frman:nouveautes~~

===== Improvements provided by the version 1.7 =====

==== Main features ====

  * Jelix 1.7 is now compatible only with PHP 5.6 or higher.

  *  **NODOC** Composer integration
    * [[https://packagist.org/packages/jelix/jelix|Jelix is now installable with Composer]]
    * Some modules and plugins are now in their own repository and available separately
      with Composer.
    * A new project can be started by using the package jelix/jelix-skeleton-app
      installable via Composer
    * Configuration parameters @@modulesPath@@ and @@pluginsPath@@ are not supported
      anymore and replaced by a new API to call from @@application.init.php@@:
      @@jApp::declareModulesDir()@@, @@jApp::declarePluginsDir()@@, @@jApp::declareModuleDir()@@.
      It si also possible to declare these path in your composer.json file.
      
  *  **NODOC** In new application created with createapp.php, the temp directory is now in the application
    directory

  * **NODOC** The URL engine has been reworked:
    * no more plugin system ('simple', 'basic_significant', 'significant' are gone).
    * The new URL engine is a merge between the previous 'significant' and
      'basic_significant' engine, with many improvements in the configuration
    * An API allows to installer scripts to declare new URL (so it modify
      the urls.xml file)
    * "module" and "action" parameters are not supported anymore (but you can
      still retrieve them from your controllers, even if this feature is
      deprecated)

  *  **NODOC** jProfiles:
     * The content of profiles.ini.php is optimized and stored in a cache
     * it is extensible with plugins: these plugins can process a specific type
       of profile and store some additionnal informations in the cache.
       (plugin : @@profiles/<type>/<type>.profiles.php@@, class: @@<type>ProfilesCompiler@@).
     * A plugin for jDb is provided, allowing jDb to improve the connection speed.

  * **NODOC** Scripts Jelix-scripts (cmd.php): all commands to help building
    an application and its components are now based on the component Symfony Console.
    Command names and their parameters have been changed.

  * **NODOC** jForms does not store instances data into the session, but into
    a cache, by using jCache.
  * **NODOC** jLocale can now try a locale key in a similar locale of the current one
  * **NODOC** jInstaller does now a backup of installer.ini.php
  * **NODOC** jAuth: persistant_crypt_key has been renamed to persistant_encryption_key
   and use a stronger random generation algorithm.
  * **NODOC** Web assets of modules loaded by the www controler of Jelix are now
    put in the cache of the browser.
  * **NODOC** jDb schema: improved support into sqlite3 driver
  * **NODOC** jDao has now its own plugins to generate classes. So "daobuilder"
    classes of jDb plugins are not recognized anymore.
  * **NODOC** jDb: improved the support of prepared queries
     * **NODOC** bindValue and bindParam should follow signature of PDO'ones
     * **NODOC** sqlite: support of prepared queries
     * **NODOC** pgsql: support of named parameters for prepared queries
     * **NODOC** mysqli: improved support of prepared queries
  * **NODOC** jDb/mysqli: use modern api to start transaction
  * **NODOC** Organize zones cache into subdirectories

==== API changes ====

  * **NODOC** new method @@M@jApp::version()@@
  * **NODOC** new object @@C@jFramework@@ allowing to access to some informations about the framework (version...)
  * **NODOC** Jelix-scripts createapp: createapp.php script has been moved to a bin/ directory and is based on Symfony Console.
  * **NODOC** Jelix-scripts createapp: new option -modulename to indicate the name of the newly created module.
  * **NODOC** CRUD controller: the records list can be ordered
  * **NODOC** jauthdb_admin: Users list can be filtered and ordered
  * **NODOC** jacl2db_admin: Users list can be filtered 

  * **NODOC** new method @@M@jAppInstance::includePlugin()@@ to load a plugin class without instancy it directly

  * **NODOC** jIniFileModifier: no empty line added at the end of the file at each save
  * **NODOC** @@jFile::getMimeTypeFromFilename()@@: support of a mime type list defined
   into a @@[mimeTypes]@@ section in the configuration
  * **NODOC** jLocale has been refactorized with a new class to read properties file


  * **NODOC** @@jInstallerBase@@ and @@jInstallerEntryPoint@@ for installation
    scripts, have new methods to access to configuration files
  * **NODOC** fix jDatetime about RCF822 format and timezone
  * **NODOC** jDao: the 'driver' attribut is deprecated, and is replaced by a 'dbtype' attribute
  * **NODOC** new method @@M@jCoordinator::execOriginalAction()@@ to know when there is an internal redirection
  * **NODOC** jApp is now using internally a new class jAppInstance to ease context switching

===== Modules and plugins removed =====

Like the jtcpdf module in previous version of Jelix, some modules and plugins
are not provided anymore with the Jelix package, but available separately
via Composer.

Here are these modules and plugins

  * jtcpdf module: [[https://packagist.org/packages/jelix/tcpdf-module|jelix/tcpdf-module]].
  * Minify plugin for jResponseHtml: [[https://packagist.org/packages/jelix/minify-module|jelix/minify-module]].
  * redis plugin for jKVDb: [[https://packagist.org/packages/jelix/php-redis-plugin|jelix/php-redis-plugin]].
  * jsitemap module : [[https://packagist.org/packages/jelix/sitemap-module|jelix/sitemap-module]]
  * [[https://packagist.org/packages/jelix/diff-plugin|diff plugin for jTpl]]

Some other components, modules and plugins are now in their own repository, although
there are available with the Jelix package via Composer dependencies.

  * [[https://packagist.org/packages/jelix/fakeserverconf|FakeServerConf]]
  * [[https://packagist.org/packages/jelix/soap-server-module|jSoap module]]
  * [[https://packagist.org/packages/jelix/feeds-module|new module jFeeds]] containing classes
    and responses object to generate RSS and ATOM feeds
  * [[https://packagist.org/packages/jelix/castor|Standalone version of jTpl: Castor]]
  * [[https://packagist.org/packages/jelix/inifile|IniModifier and MultiIniModifier]], 
    (formely known as jIniFileModifier and jIniMultiFilesModifier)
  * [[https://packagist.org/packages/jelix/wikirenderer-plugin|jWiki and WikiRenderer]]

===== Deprecated features, modules and plugins =====

  * @@jFile@@ is based on the Composer package "jelix/file-utilities", which
    have more useful methods. jFile is deprecated.
  * Simpletests and the junittests module has been removed. If you need them, you can
    still installed separately (with Composer for example).
  * mysql and sqlite plugins. They used deprecated PHP API. Note that there are
    still a mysqli and a sqlite3 plugin in Jelix
  * There are not anymore en_EN locales files. Configure your application to use
    en_US or en_GB locales
  * The memcache22 plugin for jCache has been removed
  * Method @@jInstallerBase::declarePluginsPath()@@ has been removed
  * jHttp is now deprecated and available as a Composer package
  * jIniFile, jIniFileModifier, jIniMultiFilesModifier have other names:
    Jelix\IniFile\Util, Jelix\IniFile\IniModifier, Jelix\IniFile\MultiIniModifier.
    But it is still possible to use old name until the next version.
  * **NODOC** The class @@jJson@@ has been removed. Use json PHP functions instead.
  * **NODOC** The class @@jCrypt@@ has been removed. The API it used has been deprecated
    in PHP and is not maintained anymore. You should use other stronger libraries
    like defuse/php-encryption for example.
  * Clearbricks files have been removed
  * **NODOC** the class @@jVersionComparator@@ has been replaced by another
    similar class @@Jelix\Version\VersionComparator@@ (package "jelix/version")
  * Remove <directories> from project.xml. It is not supported anymore.

===== For contributors =====

  * The Vagrant configuration for contributors is now in testapp
  * No need anymore to "build" Jelix from the git repository: it is more easy to contribute ;-)
  * FakeServerConf, Minify, PHPMailer  are now installed via Composer
  * In testapp, a new application "adminapp" is available to test admin modules

===== Contributors to Jelix 1.7 =====

  * Brunto (crud controller)
