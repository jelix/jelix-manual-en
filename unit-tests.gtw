~~LANG:FR@frman:tests_unitaires~~

See the definition of unit-test on wikipedia: http://en.wikipedia.org/wiki/Unit-testing .


===== Creating tests with PHPUnit =====

Using PHPUnit to create tests is the prefered method in jelix 1.3 and higher. See
[[https://github.com/sebastianbergmann/phpunit/|the manual of PHPUnit]] to know how to use
it. You must install PHPUnit, it is not provided in the Jelix package.

Jelix brings some helpers. The @@createapp@@ command has created a
@@F@tests/runtests.php@@ in your application (or copy the file
@@F@lib/jelix-scripts/templates/tests/runtests.php@@). You will launch this file instead
of PHPUnit. It then allows you to not fill a @@F@phpunit.xml@@ with all your tests stored
in your modules. To do so:

   * create your tests in the @@tests/@@ directory of your modules
   * store them in files with the suffix @@.pu.php@@ (and not @@Tests.php@@ as usual with PHPUnit)
   * launch @@php runtests.php --all-modules@@ to run tests in all modules
   * launch @@php runtests.php --module foo@@ to run tests only in the module foo
   * you can add the option @@--testtype xxxx@@ and it launches only @@*.xxxx.pu.php@@ files. That way, you can separate unit tests, functional tests etc..

You can use all others options of PHPUnit with runtests.php.




===== Creating tests with Simpletest =====

This possibility has been removed from the source code of Jelix since Jelix 1.7. You can
install the [[https://packagist.org/packages/jelix/simpletest-module|the simpletest-module package via Composer]].
